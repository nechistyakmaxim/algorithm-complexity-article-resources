/* 
Квадратичная сложность (O(n²)) означает, что количество операций растёт пропорционально квадрату числа входных данных.
Обычно она появляется, когда есть два вложенных цикла, которые проходят по массиву.
*/

метод ПолучитьМассивСлучайныхЧисел(КоличествоЭлементов: Число): Массив<Число>
    знч МассивРезультат = <Число>[]
    знч ГенераторЧисла = новый СлучайныйГенератор()
    для Индекс = 1 по КоличествоЭлементов 
        МассивРезультат.Добавить(ГенераторЧисла.СлучайноеЧисло(0,100000).Округлить())    
    ; 
    возврат МассивРезультат   
;

метод Скрипт()
    КвадратичнаяCложность()    
; 

метод КвадратичнаяCложность()
    знч Массив100 = ПолучитьМассивСлучайныхЧисел(100)
    знч Массив1000 = ПолучитьМассивСлучайныхЧисел(1000)
    
    пер НачалоОперации = ДатаВремя.Сейчас()
    пер КоличествоИтераций = СортировкаПузырьком(Массив100)
    пер ДлительностьОперации = (ДатаВремя.Сейчас() - НачалоОперации).ВМиллисекундах() 
    Консоль.Записать("Время сортировки массива 100 элементов: %{ДлительностьОперации} мс. Количество итераций: %{КоличествоИтераций}")
    
    НачалоОперации = ДатаВремя.Сейчас()
    КоличествоИтераций = СортировкаПузырьком(Массив1000)
    ДлительностьОперации = (ДатаВремя.Сейчас() - НачалоОперации).ВМиллисекундах() 
    Консоль.Записать("Время сортировки массива 1000 элементов: %{ДлительностьОперации} мс. Количество итераций: %{КоличествоИтераций}")     
;

метод СортировкаПузырьком(ИсходныйМассив: Массив<Число>): Число
    пер ДлинаМассива = ИсходныйМассив.Граница()
    пер КоличествоИтераций = 0
    для i = 0 по ДлинаМассива - 1
	    // Внутренний цикл: до (n - 1 - i), потому что конец уже отсортирован
        для j = 0 по (ДлинаМассива - 1 - i) 
            КоличествоИтераций += 1
            если (ИсходныйМассив[j] > ИсходныйМассив[j + 1]) 
                // Меняем элементы местами (деструктуризация)
                знч temp = ИсходныйМассив[j]
                ИсходныйМассив[j] = ИсходныйМассив[j + 1]
                ИсходныйМассив[j + 1] = temp
            ;
        ;    
    ;
    Консоль.Записать(ИсходныйМассив.Представление().Обрезать(100, "...")) 
    возврат КоличествоИтераций          
;